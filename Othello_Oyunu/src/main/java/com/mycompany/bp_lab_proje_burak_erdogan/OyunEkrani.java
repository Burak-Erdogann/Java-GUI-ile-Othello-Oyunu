/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bp_lab_proje_burak_erdogan;

import java.awt.Color;
import java.awt.GridLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thebu
 */
public class OyunEkrani extends javax.swing.JFrame {

    KULLANICI_GIRIS g = new KULLANICI_GIRIS();

    public static DefaultTableModel skorlarTablosu = new DefaultTableModel();

    public static DefaultTableModel getModelTablo() {
        return skorlarTablosu;
    }

    public static void setModelTablo(DefaultTableModel modelTablo) {
        Skorlar_Tablosu.skorlarTablosu = skorlarTablosu;
    }

    DefaultTableModel hamleTablosu = new DefaultTableModel();

    Oyun oyun;
    public static boolean oyuncu_Sırasi;

    private int satir;// satir ve sutunum
    private int sutun;//

    public OyunEkrani() {

        initComponents();
        oyuncu_Sırasi = true;
        hamleTablosu = (DefaultTableModel) this.hamlelerTablosu.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_oyunTahtasi = new javax.swing.JPanel();
        btn_yeni_oyunn = new javax.swing.JButton();
        spinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        hamlelerTablosu = new javax.swing.JTable();
        lbl_oyuncu_sirasi = new javax.swing.JLabel();
        label_oyuncuSirasi_göster = new javax.swing.JLabel();
        lbl_oyuncu_2 = new javax.swing.JLabel();
        lbl_oyuncu_1 = new javax.swing.JLabel();
        lbl_Oyuncu2_Tas_sayisi = new javax.swing.JLabel();
        lbl_Oyuncu1_Tas_sayisi = new javax.swing.JLabel();
        btn_skorTablo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menü_yeni_oyun = new javax.swing.JMenu();
        menü_yeni_oyunn = new javax.swing.JMenuItem();
        menü_exit = new javax.swing.JMenuItem();
        menü_skorTablo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(325, 180, 0, 0));
        setMinimumSize(new java.awt.Dimension(1000, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_oyunTahtasi.setBackground(new java.awt.Color(153, 204, 255));
        pnl_oyunTahtasi.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(pnl_oyunTahtasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 630, 370));

        btn_yeni_oyunn.setBackground(new java.awt.Color(204, 204, 204));
        btn_yeni_oyunn.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btn_yeni_oyunn.setText("Yeni Oyuna Basla");
        btn_yeni_oyunn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_yeni_oyunnActionPerformed(evt);
            }
        });
        getContentPane().add(btn_yeni_oyunn, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 110, 130, -1));

        spinner.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        spinner.setModel(new javax.swing.SpinnerNumberModel(5, 5, 10, 1));
        getContentPane().add(spinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 110, -1, -1));

        hamlelerTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Oyuncu", "Hamle"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hamlelerTablosu);
        if (hamlelerTablosu.getColumnModel().getColumnCount() > 0) {
            hamlelerTablosu.getColumnModel().getColumn(0).setResizable(false);
            hamlelerTablosu.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 190, 250, 290));

        lbl_oyuncu_sirasi.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lbl_oyuncu_sirasi.setText("Oyuncu Sirasi : ");
        getContentPane().add(lbl_oyuncu_sirasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, 130, 30));

        label_oyuncuSirasi_göster.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        getContentPane().add(label_oyuncuSirasi_göster, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 16, 130, 40));

        lbl_oyuncu_2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lbl_oyuncu_2.setText("Oyuncu 2 Tas Sayisi : ");
        getContentPane().add(lbl_oyuncu_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 130, -1));

        lbl_oyuncu_1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lbl_oyuncu_1.setText("Oyuncu 1 Tas Sayisi : ");
        getContentPane().add(lbl_oyuncu_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 130, -1));

        lbl_Oyuncu2_Tas_sayisi.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        getContentPane().add(lbl_Oyuncu2_Tas_sayisi, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 100, 20));

        lbl_Oyuncu1_Tas_sayisi.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        getContentPane().add(lbl_Oyuncu1_Tas_sayisi, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 100, 20));

        btn_skorTablo.setBackground(new java.awt.Color(204, 204, 204));
        btn_skorTablo.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btn_skorTablo.setText("Skorlar");
        btn_skorTablo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_skorTabloActionPerformed(evt);
            }
        });
        getContentPane().add(btn_skorTablo, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 150, 130, -1));

        menü_yeni_oyun.setText("Menü");

        menü_yeni_oyunn.setText("Yeni Oyuna Basla");
        menü_yeni_oyunn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menü_yeni_oyunnActionPerformed(evt);
            }
        });
        menü_yeni_oyun.add(menü_yeni_oyunn);

        menü_exit.setText("Exit");
        menü_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menü_exitActionPerformed(evt);
            }
        });
        menü_yeni_oyun.add(menü_exit);

        menü_skorTablo.setText("Skorlar");
        menü_skorTablo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menü_skorTabloActionPerformed(evt);
            }
        });
        menü_yeni_oyun.add(menü_skorTablo);

        jMenuBar1.add(menü_yeni_oyun);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menü_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menü_exitActionPerformed
        // TODO add your handling code here:

        KULLANICI_GIRIS g = new KULLANICI_GIRIS();

        //cikis yapma sorusu
        int soru = JOptionPane.showConfirmDialog(rootPane, "Cikis Yapmak Istediginize Emin Misiniz ? ", "Dikkat", JOptionPane.YES_NO_CANCEL_OPTION);

        if (soru == JOptionPane.YES_OPTION) {
            this.dispose();
            g.setVisible(true);
        } else if (soru == JOptionPane.NO_OPTION) {

        } else {

        }

    }//GEN-LAST:event_menü_exitActionPerformed

    private void btn_yeni_oyunnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_yeni_oyunnActionPerformed

        this.lbl_Oyuncu1_Tas_sayisi.setText("");
        this.lbl_Oyuncu2_Tas_sayisi.setText("");
        oyuncu_Sırasi = true;
        this.label_oyuncuSirasi_göster.setText("Siyah Oyuncu");
        hamleTablosu.setRowCount(0);
        this.pnl_oyunTahtasi.removeAll();
        int istenilen_boyut = (int) this.spinner.getValue();
        this.oyun = new Oyun(istenilen_boyut);

        this.pnl_oyunTahtasi.setLayout(new GridLayout(istenilen_boyut, istenilen_boyut));

        for (int i = 0; i < istenilen_boyut; i++) {

            final int sabitI = i; // bu degisken bize bastigimiz yerin lokasyonunu vericek

            for (int j = 0; j < istenilen_boyut; j++) {

                final int sabitJ = j;

                Butonn b = new Butonn();

                Oyun x = new Oyun(istenilen_boyut);
                b.addActionListener(new java.awt.event.ActionListener() {

                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        butonrenkActionPerformed(evt);
                    }
                }
                );

                // bu kisimda ise oyun olustugu anda tum renkleri ayarliyor
                if (i == istenilen_boyut / 2 && j == istenilen_boyut / 2) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.WHITE);
                    pnl_oyunTahtasi.add(b);

                    pnl_oyunTahtasi.add(b);
                } else if (i == istenilen_boyut / 2 && j == (istenilen_boyut / 2) - 1) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.BLACK);
                    pnl_oyunTahtasi.add(b);
                } else if (i == istenilen_boyut / 2 - 1 && j == istenilen_boyut / 2) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.BLACK);
                    pnl_oyunTahtasi.add(b);
                } else if (i == istenilen_boyut / 2 - 1 && j == (istenilen_boyut / 2) - 1) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.WHITE);
                    pnl_oyunTahtasi.add(b);

                } else {

                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.BLUE);
                    pnl_oyunTahtasi.add(b);
                }

                this.oyun.oyunArrayi[i][j].addActionListener(e -> {
                    this.butonLokasyonu(sabitI, sabitJ);
                });

            }
            this.oyun.Basla();
            this.pnl_oyunTahtasi.revalidate(); // tahtayi düzenleme kismi
            this.pnl_oyunTahtasi.repaint();
        }


    }//GEN-LAST:event_btn_yeni_oyunnActionPerformed

    private void butonrenkActionPerformed(java.awt.event.ActionEvent evt) {

        Butonn my_btn = (Butonn) evt.getSource();

        int istenilen_boyut = (int) this.spinner.getValue();

        int satir = -1, sutun = -1;
        for (int i = 0; i < this.oyun.oyunArrayi.length; i++) {
            // bu kisimda butonun arrayda var mı yok mu kontrolunu sagliyorum
            for (int j = 0; j < this.oyun.oyunArrayi.length; j++) {
                if (my_btn == this.oyun.oyunArrayi[i][j]) {
                    satir = i;
                    sutun = j;
                    break;
                }
            }
            if (satir != -1 && sutun != -1) {
                break;
            }
        }

        if (!my_btn.getBackground().equals(Color.BLUE)) {
            // ayni tusa basamaz kontrolu
            JOptionPane.showMessageDialog(rootPane, "Ayni Tusa Tekrar Basamazsiniz!! ", "Uyari!!", JOptionPane.ERROR_MESSAGE);

        } else {

            // Taslari kontrol eden kisim 
            boolean cevirilebilir_mi = false;
            int[][] tas_etrafi_yonleri = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}, {-1, -1}, {-1, 1}, {1, -1}, {1, 1}};

            for (int[] yon : tas_etrafi_yonleri) {
                // bu kisimda butonlari yani taslari yukarida verilen yon boyunca kontrol ediyorum
                int dRow = yon[0], dCol = yon[1];

                for (int i = 1; i < this.oyun.oyunArrayi.length; i++) {
                    int r = satir + i * dRow, c = sutun + i * dCol;

                    if (r < 0 || r >= this.oyun.oyunArrayi.length || c < 0 || c >= this.oyun.oyunArrayi.length || this.oyun.oyunArrayi[r][c] == my_btn) {
                        // Tahta disina cikmama kontrolü tahtanın boyutunda kadar kontrol ediyor
                        break;
                    }

                    // Bu kisimda taslarin kendi renklerini tek tek kontrol ediyorum ve ona gore islem yapiyorum
                    if (this.oyun.oyunArrayi[r][c] == null) {
                        break;
                    } else if (this.oyun.oyunArrayi[r][c].getBackground().equals(Color.WHITE) && !oyuncu_Sırasi) {
                        cevirilebilir_mi = true;
                    } else if (this.oyun.oyunArrayi[r][c].getBackground().equals(Color.black) && oyuncu_Sırasi) {
                        cevirilebilir_mi = true;
                    } else if (this.oyun.oyunArrayi[r][c].getBackground().equals(Color.BLUE)) {
                        cevirilebilir_mi = false;
                        break;
                    }

                    // Tüm taslar kontrol edildikten sonra bu kisimda donusturme islemine basliyorum
                    int k = 0;

                    while (true) {

                        if (k == this.oyun.oyunArrayi.length - 1) {
                            break;

                        }

                        if (i == this.oyun.oyunArrayi.length - k && cevirilebilir_mi) {
                            for (int j = 1; j <= i; j++) {

                                if (oyuncu_Sırasi == true) {
                                    // her bolumde siraya bakarak renkleri koyuyorum ve tahtadaki taslari donusturuyorum
                                    my_btn.setBackground(Color.BLACK);
                                    this.oyun.oyunArrayi[satir + j * dRow][sutun + j * dCol].setBackground(Color.BLACK);
                                    this.label_oyuncuSirasi_göster.setText("Beyaz Oyuncu");

                                } else {
                                    my_btn.setBackground(Color.WHITE);
                                    this.oyun.oyunArrayi[satir + j * dRow][sutun + j * dCol].setBackground(Color.WHITE);
                                    this.label_oyuncuSirasi_göster.setText("Siyah Oyuncu");

                                }

                            }
                        }
                        k++; // k degiskeni her tur degiserek tahta boyu kadar kontrol saglanirsa renkleri donduruyor

                    }

                }
            }

            if (oyuncu_Sırasi) {
                this.label_oyuncuSirasi_göster.setText("Beyaz Oyuncu");
            } else {
                this.label_oyuncuSirasi_göster.setText("Siyah Oyuncu");
            }
            oyuncu_Sırasi = !oyuncu_Sırasi; // burada ise oyuncu sira degisimi yapiyorum

        }

        tasSayaci();

    }


    private void menü_yeni_oyunnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menü_yeni_oyunnActionPerformed

        this.lbl_Oyuncu1_Tas_sayisi.setText("");
        this.lbl_Oyuncu2_Tas_sayisi.setText("");
        oyuncu_Sırasi = true;
        this.label_oyuncuSirasi_göster.setText("Siyah Oyuncu");
        hamleTablosu.setRowCount(0);
        this.pnl_oyunTahtasi.removeAll();
        int istenilen_boyut = (int) this.spinner.getValue();
        this.oyun = new Oyun(istenilen_boyut);

        this.pnl_oyunTahtasi.setLayout(new GridLayout(istenilen_boyut, istenilen_boyut));

        for (int i = 0; i < istenilen_boyut; i++) {

            final int sabitI = i;

            for (int j = 0; j < istenilen_boyut; j++) {

                final int sabitJ = j;

                Butonn b = new Butonn();

                Oyun x = new Oyun(istenilen_boyut);
                b.addActionListener(new java.awt.event.ActionListener() {

                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        butonrenkActionPerformed(evt);
                    }
                }
                );

                if (i == istenilen_boyut / 2 && j == istenilen_boyut / 2) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.WHITE);
                    pnl_oyunTahtasi.add(b);

                    pnl_oyunTahtasi.add(b);
                } else if (i == istenilen_boyut / 2 && j == (istenilen_boyut / 2) - 1) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.BLACK);
                    pnl_oyunTahtasi.add(b);
                } else if (i == istenilen_boyut / 2 - 1 && j == istenilen_boyut / 2) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.BLACK);
                    pnl_oyunTahtasi.add(b);
                } else if (i == istenilen_boyut / 2 - 1 && j == (istenilen_boyut / 2) - 1) {
                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.WHITE);
                    pnl_oyunTahtasi.add(b);

                } else {

                    this.oyun.oyunArrayi[i][j] = b;
                    this.oyun.oyunArrayi[i][j].setSize(50, 50);
                    this.oyun.oyunArrayi[i][j].setBackground(Color.BLUE);
                    pnl_oyunTahtasi.add(b);
                }

                this.oyun.oyunArrayi[i][j].addActionListener(e -> {
                    this.butonLokasyonu(sabitI, sabitJ);
                });

            }
            this.oyun.Basla();
            this.pnl_oyunTahtasi.revalidate();
            this.pnl_oyunTahtasi.repaint();
        }
    }//GEN-LAST:event_menü_yeni_oyunnActionPerformed

    private void btn_skorTabloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_skorTabloActionPerformed
        Skorlar_Tablosu s = new Skorlar_Tablosu();
        DefaultTableModel skor_tbl = (DefaultTableModel) s.getTablo().getModel();

        Object[] listeye_ekleniceklen_oyuncu_1 = {getIsim_1(), lbl_Oyuncu1_Tas_sayisi.getText()};
        Object[] listeye_ekleniceklen_oyuncu_2 = {getIsim_2(), lbl_Oyuncu2_Tas_sayisi.getText()};
        skor_tbl.addRow(listeye_ekleniceklen_oyuncu_1);
        skor_tbl.addRow(listeye_ekleniceklen_oyuncu_2);
        s.setVisible(true);
       
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("Skor.txt"));

            // Tablodan verileri alarak dosyaya yazma
            for (int i = 0; i < skor_tbl.getRowCount(); i++) {
                String isim = (String) skor_tbl.getValueAt(i, 0);
                String tasSayisi = (String) skor_tbl.getValueAt(i, 1);
                writer.write(isim + " " + tasSayisi + "\n");
            }

            writer.close();
            System.out.println("Dosyaya yazma işlemi başarılı.");
        } catch (IOException e) {
            System.out.println("Dosyaya yazma hatası: " + e.getMessage());
        }
      


    }//GEN-LAST:event_btn_skorTabloActionPerformed

    private void menü_skorTabloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menü_skorTabloActionPerformed
        // TODO add your handling code here:
        Skorlar_Tablosu s = new Skorlar_Tablosu();
        DefaultTableModel skor_tbl = (DefaultTableModel) s.getTablo().getModel();

        Object[] listeye_ekleniceklen_oyuncu_1 = {getIsim_1(), lbl_Oyuncu1_Tas_sayisi.getText()};
        Object[] listeye_ekleniceklen_oyuncu_2 = {getIsim_2(), lbl_Oyuncu2_Tas_sayisi.getText()};
        skor_tbl.addRow(listeye_ekleniceklen_oyuncu_1);
        skor_tbl.addRow(listeye_ekleniceklen_oyuncu_2);
        s.setVisible(true);
    }//GEN-LAST:event_menü_skorTabloActionPerformed

    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OyunEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OyunEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OyunEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OyunEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new OyunEkrani().setVisible(true);

            }
        });
    }

    public void butonLokasyonu(int i, int j) {

        DefaultTableModel tablo = (DefaultTableModel) this.hamlelerTablosu.getModel();

        if (this.oyun.oyunArrayi[i][j].getBackground().equals(Color.BLUE)) {
            // burada ise oyuncularin hamlelerini tabloya yazdiriyorum
            if (oyuncu_Sırasi == true) {
                Object[] x = {"Oyuncu 1 hamlesi : ", i + "   " + j};
                tablo.addRow(x);
            } else {
                Object[] x = {"Oyuncu 2 hamlesi : ", i + "   " + j};
                tablo.addRow(x);
            }

        }

    }

    public void tasSayaci() {

        // oyundaki siyah ve beyaz taslari sayarak oyunun kazananini belirleyen method burasidir
        int istenilen_boyut = (int) this.spinner.getValue();
        Integer siyah_tas_sayisi = 0;
        Integer beyaz_tas_sayisi = 0;

        for (int i = 0; i < this.oyun.oyunArrayi.length; i++) {

            for (int j = 0; j < this.oyun.oyunArrayi.length; j++) {

                if (this.oyun.oyunArrayi[i][j].getBackground().equals(Color.BLACK)) {
                    // bu kisimda oyuncu sirasi labelini degistiriyorum
                    siyah_tas_sayisi++;
                    this.lbl_Oyuncu1_Tas_sayisi.setText(siyah_tas_sayisi.toString());

                } else if (this.oyun.oyunArrayi[i][j].getBackground().equals(Color.WHITE)) {
                    beyaz_tas_sayisi++;
                    this.lbl_Oyuncu2_Tas_sayisi.setText(beyaz_tas_sayisi.toString());

                }

            }

            if (siyah_tas_sayisi + beyaz_tas_sayisi == istenilen_boyut * istenilen_boyut) {

                if (siyah_tas_sayisi > beyaz_tas_sayisi) {

                    String kazanan = "1.Oyuncu Kazandi Tebriklerr........";
                    JOptionPane.showMessageDialog(rootPane, "Oyun Bitti " + kazanan, "TEBRIKLERRR...", JOptionPane.INFORMATION_MESSAGE);

                    int Soru = JOptionPane.showConfirmDialog(rootPane, "Yeni Oyuna Baslamak Ister Misiniz ? ", "?", JOptionPane.YES_NO_CANCEL_OPTION);

                    if (Soru == JOptionPane.YES_OPTION) {
                        oyunBitti();
                    } else if (Soru == JOptionPane.NO_OPTION) {

                    } else {

                    }

                } else if (beyaz_tas_sayisi > siyah_tas_sayisi) {
                    String kazanan = "2.Oyuncu Kazandi Tebriklerr........";
                    JOptionPane.showMessageDialog(rootPane, "Oyun Bitti " + kazanan, "TEBRIKLERRR...", JOptionPane.INFORMATION_MESSAGE);

                    int Soru = JOptionPane.showConfirmDialog(rootPane, "Yeni Oyuna Baslamak Ister Misiniz ? ", "?", JOptionPane.YES_NO_CANCEL_OPTION);

                    if (Soru == JOptionPane.YES_OPTION) {
                        oyunBitti();
                    } else if (Soru == JOptionPane.NO_OPTION) {

                    } else {

                    }
                } else {

                    String kazanan = "Oyun Berabere!!........";
                    JOptionPane.showMessageDialog(rootPane, "Oyun Bitti " + kazanan, "TEBRIKLERRR...", JOptionPane.INFORMATION_MESSAGE);

                    int Soru = JOptionPane.showConfirmDialog(rootPane, "Yeni Oyuna Baslamak Ister Misiniz ? ", "?", JOptionPane.YES_NO_CANCEL_OPTION);

                    if (Soru == JOptionPane.YES_OPTION) {
                        oyunBitti();
                    } else if (Soru == JOptionPane.NO_OPTION) {

                    } else {

                    }

                }

            }

        }

    }

    public void dosyayaYaz(String dosyaAdi) {

    }

    public String dosyadanOku(String dosyaAdi) {
        StringBuilder icerik = new StringBuilder();
        try {
            BufferedReader reader = new BufferedReader(new FileReader("Skorlar.txt"));
            String satir;
            while ((satir = reader.readLine()) != null) {
                icerik.append(satir).append("\n");
            }
            reader.close();
        } catch (IOException e) {
            System.out.println("Dosyadan okuma hatası: " + e.getMessage());
        }
        return icerik.toString();
    }

    public void oyunBitti() {
        // bu kisimda her seyi sifirliyorum yeni oyun icin
        this.lbl_Oyuncu1_Tas_sayisi.setText("");
        this.lbl_Oyuncu2_Tas_sayisi.setText("");
        hamleTablosu.setRowCount(0);
        this.pnl_oyunTahtasi.removeAll();
        this.pnl_oyunTahtasi.repaint();
    }

    // buralarda ise labellarin isimleri degisiyor
    public void setlbl_oyuncu_1(String str) {
        this.lbl_oyuncu_1.setText(str);
    }

    public void setlbl_oyuncu_2(String str) {
        this.lbl_oyuncu_2.setText(str);
    }

    public String getIsim_1() {
        return this.lbl_oyuncu_1.getText();
    }

    public String getIsim_2() {
        return this.lbl_oyuncu_2.getText();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_skorTablo;
    private javax.swing.JButton btn_yeni_oyunn;
    private javax.swing.JTable hamlelerTablosu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_oyuncuSirasi_göster;
    private javax.swing.JLabel lbl_Oyuncu1_Tas_sayisi;
    private javax.swing.JLabel lbl_Oyuncu2_Tas_sayisi;
    private javax.swing.JLabel lbl_oyuncu_1;
    private javax.swing.JLabel lbl_oyuncu_2;
    private javax.swing.JLabel lbl_oyuncu_sirasi;
    private javax.swing.JMenuItem menü_exit;
    private javax.swing.JMenuItem menü_skorTablo;
    private javax.swing.JMenu menü_yeni_oyun;
    private javax.swing.JMenuItem menü_yeni_oyunn;
    private javax.swing.JPanel pnl_oyunTahtasi;
    private javax.swing.JSpinner spinner;
    // End of variables declaration//GEN-END:variables

}
